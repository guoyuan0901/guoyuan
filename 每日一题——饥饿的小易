import java.util.Scanner;
//4X+3和8X+7都是通过自身调用2 3遍得到的
//4X+3=2(2X+1)+1 
// 8X+7=2(4X+3)+1;
public class 饥饿的小易 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int x0 = in.nextInt();
        int count = 0;
        while (x0 != 0 && count <= 300000) {//300000为能够进行移动的次数
            x0 = ((x0 << 1) + 1) % 1000000007;//右移判断是否能够整除1000000007
            //右移*2 相当于2X
            count++;//右移次数
        }
        int res = (count + 2) / 3;
        //假设移动的距离为4*x+3的有M次 8*x+7的为N次
        //则总共移动的次数为M+N次 但要使得此时最少 
        //res=(count/3+count%3/2) 与(count+2)/3一致
        System.out.println(res > 100000 ? -1 : res);
    }
}
