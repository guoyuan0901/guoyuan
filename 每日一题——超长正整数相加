import java.util.Arrays;
import java.util.Scanner;

public class 超长正整数相加 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        //hasNext()为检查序列中是否还有元素
        //while(in.hasNext()) {
            String addend = in.nextLine();
            String augend = in.nextLine();
            char[] A = addend.toCharArray();
            char[] B = augend.toCharArray();
            if (A.length <= B.length) {
                char[] temp = A;
                A = B;
                B = temp;
            }//始终将相加的结果放在A中
            int flag = 0;
            //不可放在交换前 有可能交换后导致数组长度不一致
            int index1 = A.length - 1;
            int index2 = B.length - 1;
            while (index1 >= 0 && index2 >= 0) {
                int a = A[index1] - '0' + flag;
                int b = B[index2] - '0';
                if (a + b > 9) {
                    a = (a + b) % 10;
                    flag = 1;
                } else {
                    a = a + b;
                    flag = 0;
                }
                A[index1] = (char) (a + '0');//将int型进行强制转换为char 型
                index1--;
                index2--;
            }
            while (index1 >= 0) {//数组长度不相等时 需要对剩余的数进行处理
                int a = A[index1] - '0' + flag;
                if (a > 9) {
                    a = a % 10;
                    flag = 1;
                } else {
                    flag = 0;
                }
                A[index1] = (char) (a + '0');
                index1--;
            }
            String result = null;
            if (flag == 1) {
                result = "1" + new String(A);//最高位产生进位时 进行字符串拼接
            } else
                result = new String(A);
            System.out.println(result);
        //}
    }
}
