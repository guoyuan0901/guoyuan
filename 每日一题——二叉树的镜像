import java.util.Scanner;

class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;
    }
}
public class 二叉树的镜像 {
    public void Mirror(TreeNode root) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null) {
            return;
        }//根结点的无子节点时 进行返回
        if (root != null) {
            TreeNode temp = root.left;
            root.left = root.right;
            root.right = temp;
        }//交换自结点
        if (root.left != null) {
            Mirror(root.left);
        }//递归依次处理左右结点
        if (root.right != null) {
            Mirror(root.right);
        }
    }
}
